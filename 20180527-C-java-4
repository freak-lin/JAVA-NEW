

<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <title>葡萄藤PPT</title>

    <link rel="stylesheet" href="https://ptteng.github.io/PPT/css/reveal/reveal.css">

    <!-- PPT主题，可以在/css/reveal/theme/中选择其他主题，目前暂时只能使用该模板 -->
    <link rel="stylesheet" href="https://ptteng.github.io/PPT/css/reveal/theme/ptt.css">

    <!-- syntax highlighting 代码高亮主题 -->
    <link rel="stylesheet" href="https://ptteng.github.io/PPT/lib/reveal/css/zenburn.css">

    <!-- 打印和PDF输出样式 -->
    <script>
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://ptteng.github.io/PPT/css/reveal/print/pdf.css' : '../css/reveal/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>
</head>
<body>
<img src="https://ptteng.github.io/PPT/img/demo/logo.png" alt="" usemap="#pttmap" class="base-logo">
<map name="pttmap">
    <area shape="rect" coords="0,0,276,58" href="http://www.jnshu.com" alt="" target="_blank"/>
</map>
<div class="reveal">
    <div class="slides">
        <section>
            <h2>熟练使用c标签，el表达式</h2>
			<p></p>
            <h3>java分享会</h3>
            <p>分享人：石奥林</p>
        </section>
        <section>
            <p>1.背景介绍</p>
            <p>2.知识剖析</p>
            <p>3.常见问题</p>
            <p>4.解决方案</p>
            <p>5.编码实战</p>
            <p>6.扩展思考</p>
            <p>7.参考文献</p>
            <p>8.更多讨论</p>
        </section>
        <section>
            <h3>1.背景介绍</h3>
        </section>
		
		
			<section>
            <p>EL是JSP内置的表达式语言，用以访问页面的上下文以及不同作用域中的对象 ，取得对象属性的值，或执行简单的运算或判断操作。EL在得到某个数据时，会自动进行数据类型的转换。</p>
			<p>EL表达式用于代替JSP表达式(<%= %>)在页面中做输出操作，EL表达式仅仅用来读取数据</p>
			<p>EL是JSP2.0规范的一部分，只要容器支持Servlet2.4/JSP2.0，就可以在JSP2.0网页中直接使用EL。</p>
			
			</section>
			
			<section>
			<p>由于EL表达式仅仅具有输出功能，而不替代页面中的JSP脚本片段.为了解决这个问题，JSP为我们提供了可以自定义标签库(Tag Library)的功能。</p>
			<p>	</p>
			</section>
			
		
        <section>
            <h3>2.知识剖析</h3>
        </section>
		
		<section>
            <p> EL表达式的格式：用美元符号（$）定界,内容包括在花括号（{}）中;</p>
			<p> EL表达式的作用域;</p>

		</section>
		<section>
		<p>jstl简单介绍</p>
		</section>
				<section>
		<p>C标签介绍</p>
		</section>
		
		<section>
		<p>要使用JSTL和EL表达式就必须引入两个jar包：standard.jar和jstl.jar</p>
		<p>然后还需要在JSP页面中通过taglib标签引入标签库。</p>
		<p><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %></p>
		</section>
		<section>
		<p>核心标签:</p>
		<p>&lt;c:out&gt;;&lt;c:set&gt;;&lt;c:remove&gt;;&lt;c:if&gt;;&lt;c:choose&gt;;&lt;c:when&gt;;</p>
		<p>&lt;c:otherwise&gt;;&lt;c:forEach&gt;;&lt;c:url&gt;;&lt;c:redirect&gt;</p>
		</section>
		
         <section>
            <h3>3.常见问题</h3>
        </section>
		
		<section>
            <p>JSTL标签与EL表达式之间的微妙关系</p>
			
		</section>
		
        
        <section>
            <h3>4.解决方案</h3>
        </section>
		
		<section>
			<p>JSTL一般要配合EL表达式一起使用,来实现在jsp中不出现java代码段。</p>
		</section>
	
        
        <section>
            <h3>5.编码实战</h3>
        </section>
		
        
		
        <section>
            <h3>6.扩展思考</h3>
        </section>

        <section>
            <p>自定义Tag标签</p>
        </section>
		
        <section>
            <h3>7.参考文献</h3>
            <p>https://blog.csdn.net/u010168160/article/details/49182867</p>
        </section>
		
        <section>
            <h3>8.更多讨论</h3>
            <p></p>
        </section>
		
			
		
       <section>
            <h4>鸣谢</h4>
            <p>感谢观看,如有出错,恳请指正</p>
            <p><small>BY : 石奥林</small></p>
        </section>

    </div>
</div>

<script src="https://ptteng.github.io/PPT/lib/reveal/js/head.min.js"></script>
<script src="https://ptteng.github.io/PPT/lib/reveal/reveal.js"></script>

<script>
    // 以下为常见配置属性的默认值
    // {
    // 	controls: true, // 是否在右下角展示控制条
    // 	progress: true, // 是否显示演示的进度条
    // 	slideNumber: false, // 是否显示当前幻灯片的页数编号，也可以使用代码slideNumber: 'c / t' ，表示当前页/总页数。
    // 	history: false, // 是否将每个幻灯片改变加入到浏览器的历史记录中去
    // 	keyboard: true, // 是否启用键盘快捷键来导航
    // 	overview: true, // 是否启用幻灯片的概览模式，可使用"Esc"或"o"键来切换概览模式
    // 	center: true, // 是否将幻灯片垂直居中
    // 	touch: true, // 是否在触屏设备上启用触摸滑动切换
    // 	loop: false, // 是否循环演示
    // 	rtl: false, // 是否将演示的方向变成RTL，即从右往左
    // 	fragments: true, // 全局开启和关闭碎片。
    // 	autoSlide: 0, // 两个幻灯片之间自动切换的时间间隔（毫秒），当设置成 0 的时候则禁止自动切换，该值可以被幻灯片上的 ` data-autoslide` 属性覆盖
    // 	transition: 'default', // 切换过渡效果，有none/fade/slide/convex/concave/zoom
    // 	transitionSpeed: 'default', // 过渡速度，default/fast/slow
    // 	mouseWheel: true, //是否启用通过鼠标滚轮来切换幻灯片
    // }
    // 初始化幻灯片
    Reveal.initialize({
        history: true,
        dependencies: [
            { src: 'https://ptteng.github.io/PPT/plugin/markdown/marked.js' },
            { src: 'https://ptteng.github.io/PPT/plugin/markdown/markdown.js' },
            { src: 'https://ptteng.github.io/PPT/plugin/notes/notes.js', async: true },
            { src: 'https://ptteng.github.io/PPT/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
        ]
    });
</script>
</body>
</html>
© 2018 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
API
Training
Shop
Blog
About
Press h to open a hovercard with more details.
